#pragma once
// LICENSE AND COPYRIGHT (C) INFORMATION
// https://github.com/vittorioromeo/VRSFML/blob/master/license.md


namespace sf::priv
{
////////////////////////////////////////////////////////////
/// \brief Automatic wrapper for saving and restoring the current texture binding
///
////////////////////////////////////////////////////////////
class TextureSaver
{
public:
    ////////////////////////////////////////////////////////////
    /// \brief Default constructor
    ///
    /// The current texture binding is saved.
    ///
    ////////////////////////////////////////////////////////////
    TextureSaver();

    ////////////////////////////////////////////////////////////
    /// \brief Destructor
    ///
    /// The previous texture binding is restored.
    ///
    ////////////////////////////////////////////////////////////
    ~TextureSaver();

    ////////////////////////////////////////////////////////////
    TextureSaver(const TextureSaver&)            = delete;
    TextureSaver& operator=(const TextureSaver&) = delete;

    ////////////////////////////////////////////////////////////
    TextureSaver(TextureSaver&&)            = delete;
    TextureSaver& operator=(TextureSaver&&) = delete;

private:
    ////////////////////////////////////////////////////////////
    // Member data
    ////////////////////////////////////////////////////////////
    int m_textureBinding; //!< Texture binding to restore
};

} // namespace sf::priv
