#pragma once
#include <SFML/Copyright.hpp> // LICENSE AND COPYRIGHT (C) INFORMATION


namespace sf::priv
{
////////////////////////////////////////////////////////////
/// \brief Automatic wrapper for saving and restoring the current shader binding
///
////////////////////////////////////////////////////////////
class ShaderSaver
{
public:
    ////////////////////////////////////////////////////////////
    /// \brief Default constructor
    ///
    /// The current shader binding is saved.
    ///
    ////////////////////////////////////////////////////////////
    ShaderSaver();

    ////////////////////////////////////////////////////////////
    /// \brief Destructor
    ///
    /// The previous shader binding is restored.
    ///
    ////////////////////////////////////////////////////////////
    ~ShaderSaver();

private:
    ////////////////////////////////////////////////////////////
    // Member data
    ////////////////////////////////////////////////////////////
    int m_shaderBinding{}; //!< Shader binding to restore
};

} // namespace sf::priv
