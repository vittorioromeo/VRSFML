#pragma once
#include <SFML/Copyright.hpp> // LICENSE AND COPYRIGHT (C) INFORMATION

namespace sf::base
{
////////////////////////////////////////////////////////////
template <typename T>
inline constexpr bool isIntegral = false;

////////////////////////////////////////////////////////////
template <>
inline constexpr bool isIntegral<bool> = true;

////////////////////////////////////////////////////////////
template <>
inline constexpr bool isIntegral<char> = true;

////////////////////////////////////////////////////////////
template <>
inline constexpr bool isIntegral<signed char> = true;

////////////////////////////////////////////////////////////
template <>
inline constexpr bool isIntegral<unsigned char> = true;

////////////////////////////////////////////////////////////
template <>
inline constexpr bool isIntegral<wchar_t> = true;

////////////////////////////////////////////////////////////
template <>
inline constexpr bool isIntegral<char8_t> = true;

////////////////////////////////////////////////////////////
template <>
inline constexpr bool isIntegral<char16_t> = true;

////////////////////////////////////////////////////////////
template <>
inline constexpr bool isIntegral<char32_t> = true;

////////////////////////////////////////////////////////////
template <>
inline constexpr bool isIntegral<short> = true;

////////////////////////////////////////////////////////////
template <>
inline constexpr bool isIntegral<unsigned short> = true;

////////////////////////////////////////////////////////////
template <>
inline constexpr bool isIntegral<int> = true;

////////////////////////////////////////////////////////////
template <>
inline constexpr bool isIntegral<unsigned int> = true;

////////////////////////////////////////////////////////////
template <>
inline constexpr bool isIntegral<long> = true;

////////////////////////////////////////////////////////////
template <>
inline constexpr bool isIntegral<unsigned long> = true;

////////////////////////////////////////////////////////////
template <>
inline constexpr bool isIntegral<long long> = true;

////////////////////////////////////////////////////////////
template <>
inline constexpr bool isIntegral<unsigned long long> = true;

} // namespace sf::base
